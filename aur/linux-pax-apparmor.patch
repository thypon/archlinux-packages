From 47a6a7bd2dbba092bff6d87483c401acbfb99794 Mon Sep 17 00:00:00 2001
From: Andrea Brancaleoni <miwaxe+git@gmail.com>
Date: Sat, 17 Jan 2015 03:00:20 +0100
Subject: [PATCH] PaX -> PaX & Apparmor

---
 PKGBUILD                   | 20 ++++++------
 config.i686                | 13 ++++++++
 config.x86_64              | 13 ++++++++
 linux-pax-apparmor.install | 66 +++++++++++++++++++++++++++++++++++++++
 linux-pax-apparmor.preset  | 14 +++++++++
 linux-pax.install          | 77 ----------------------------------------------
 linux-pax.preset           | 14 ---------
 7 files changed, 116 insertions(+), 101 deletions(-)
 create mode 100644 linux-pax-apparmor.install
 create mode 100644 linux-pax-apparmor.preset
 delete mode 100644 linux-pax.install
 delete mode 100644 linux-pax.preset

diff --git a/PKGBUILD b/PKGBUILD
index 9d61587..1df4e36 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -12,8 +12,8 @@
 #   https://github.com/nning/linux-pax
 #
 
-pkgname=linux-pax
-true && pkgname=(linux-pax linux-pax-headers)
+pkgname=linux-pax-apparmor
+true && pkgname=(linux-pax-apparmor linux-pax-apparmor-headers)
 _kernelname=${pkgname#linux}
 _basekernel=3.18
 _paxver=test7
@@ -100,10 +100,10 @@ build() {
   make ${MAKEFLAGS} LOCALVERSION= bzImage modules
 }
 
-package_linux-pax() {
-  pkgdesc="The Linux Kernel and modules with PaX patches"
+package_linux-pax-apparmor() {
+  pkgdesc="The Linux Kernel and modules with PaX and Apparmor patches"
   groups=('base')
-  depends=('linux-pax-flags' 'coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
+  depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
   optdepends=('crda: to set the correct wireless channels of your country')
   provides=('kernel26-pax')
   conflicts=('kernel26-pax')
@@ -161,7 +161,7 @@ package_linux-pax() {
   mv "$pkgdir/lib" "$pkgdir/usr"
 }
 
-package_linux-pax-headers() {
+package_linux-pax-apparmor-headers() {
   true && pkgdesc="Header files and scripts for building modules for linux kernel with PaX patches"
   provides=("kernel26${_kernelname}-headers=${pkgver}")
   conflicts=("kernel26${_kernelname}-headers")
@@ -284,7 +284,7 @@ package_linux-pax-headers() {
 sha256sums=('becc413cc9e6d7f5cc52a3ce66d65c3725bc1d1cc1001f4ce6c32b69eb188cbd'
             '927a30c152a193d22242de21b99c9765fb0086b0aa3fabd31938ffc6e1b3f37c'
             '99b877638fde9e41cb5a81bfeff50ab1448aab7c5d75b27c59bf4d2ec5fa35cc'
-            '0bc18c3c0c39f76dffd12507d7b8bf81cc8715476f58b5272ed37ed234d1f745'
-            '104576056d42a6dec725c3dc5defde6891ddb91fb518e137f64faea7ea410889'
-            '2d62c4be4a515cc6aca5a66c0e9fdc23cb7775531c6d102bc3c1be069dd6b0a8'
-            '92aadb166d50ca040c7789a4a32cf242f687f357aab2521fd8b807d5479c6c2a')
+            '1fb96cecd2ce2ca4611b51d2de5c5e97ee0a363f82ac1dde463cde552b350d5c'
+            'a5ca6fc753813ae3e950220a3c2a87fbac862bda554c3d605399c791a3ab5d7d'
+            'ea0dc97536efa8682c1b2df7f94da750a8b4a66f70ef1fdd59392901b7bec91d'
+            '5a6f30deb04ec1960086e896ea95903f7d60e7dc6a5c7f091ccf22aee7f120f6')
diff --git a/config.i686 b/config.i686
index 7cfe4a8..aad3281 100644
--- a/config.i686
+++ b/config.i686
@@ -6915,3 +6915,16 @@ CONFIG_FONT_8x16=y
 # CONFIG_FONT_10x18 is not set
 CONFIG_FONT_AUTOSELECT=y
 CONFIG_ARCH_HAS_SG_CHAIN=y
+
+CONFIG_SECURITY_APPARMOR=y
+CONFIG_SECURITY_APPARMOR_BOOTPARAM_VALUE=0
+CONFIG_SECURITY_APPARMOR_HASH=y
+CONFIG_AUDIT=y
+CONFIG_DEFAULT_SECURITY_APPARMOR=y
+CONFIG_DEFAULT_SECURITY="apparmor"
+# CONFIG_AUDITSYSCALL is not set
+# CONFIG_SECURITY_SELINUX is not set
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+# CONFIG_NETFILTER_XT_TARGET_AUDIT is not set
+# CONFIG_INTEGRITY_AUDIT is not set
diff --git a/config.x86_64 b/config.x86_64
index 9e23b8d..ad8bf4e 100644
--- a/config.x86_64
+++ b/config.x86_64
@@ -6672,3 +6672,16 @@ CONFIG_FONT_8x16=y
 # CONFIG_FONT_10x18 is not set
 CONFIG_FONT_AUTOSELECT=y
 CONFIG_ARCH_HAS_SG_CHAIN=y
+
+CONFIG_SECURITY_APPARMOR=y
+CONFIG_SECURITY_APPARMOR_BOOTPARAM_VALUE=0
+CONFIG_SECURITY_APPARMOR_HASH=y
+CONFIG_AUDIT=y
+CONFIG_DEFAULT_SECURITY_APPARMOR=y
+CONFIG_DEFAULT_SECURITY="apparmor"
+# CONFIG_AUDITSYSCALL is not set
+# CONFIG_SECURITY_SELINUX is not set
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+# CONFIG_NETFILTER_XT_TARGET_AUDIT is not set
+# CONFIG_INTEGRITY_AUDIT is not set
diff --git a/linux-pax-apparmor.install b/linux-pax-apparmor.install
new file mode 100644
index 0000000..3a8e536
--- /dev/null
+++ b/linux-pax-apparmor.install
@@ -0,0 +1,66 @@
+# arg 1:  the new package version
+# arg 2:  the old package version
+
+KERNEL_NAME=-pax-apparmor
+KERNEL_VERSION=
+
+post_install () {
+  # updating module dependencies
+  echo ">>> Updating module dependencies. Please wait ..."
+  depmod ${KERNEL_VERSION}
+  echo ">>> Generating initial ramdisk, using mkinitcpio.  Please wait..."
+  mkinitcpio -p linux${KERNEL_NAME}
+
+  # compat symlinks for the official kernels only
+  if [ -z "${KERNEL_NAME}" -o "${KERNEL_NAME}" = "-lts" ]; then
+    loaders="$(find /boot -name syslinux.cfg -or -name extlinux.conf -or -name grub.cfg -or -name menu.lst)"
+    [ -f /etc/lilo.conf ] && loaders="$loaders /etc/lilo.conf"
+    if [ -n "${loaders}" ] && grep -q -e vmlinuz26 -e kernel26.img -e kernel26-fallback.img $loaders; then
+      # add compat symlinks for the initramfs images
+      ln -sf initramfs-linux${KERNEL_NAME}.img boot/kernel26${KERNEL_NAME}.img
+      ln -sf initramfs-linux${KERNEL_NAME}-fallback.img \
+        boot/kernel26${KERNEL_NAME}-fallback.img
+      ln -sf vmlinuz-linux${KERNEL_NAME} /boot/vmlinuz26${KERNEL_NAME}
+    fi
+  fi
+}
+
+post_upgrade() {
+  pacman -Q grub &>/dev/null
+  hasgrub=$?
+  pacman -Q grub2 &>/dev/null
+  hasgrub2=$?
+  pacman -Q lilo &>/dev/null
+  haslilo=$?
+  # reminder notices
+  if [ $haslilo -eq 0 ]; then
+    echo ">>>"
+    if [ $hasgrub -eq 0 -o $hasgrub2 -eq 0 ]; then
+      echo ">>> If you use the LILO bootloader, you should run 'lilo' before rebooting."
+    else
+      echo ">>> You appear to be using the LILO bootloader. You should run"
+      echo ">>> 'lilo' before rebooting."
+    fi
+    echo ">>>"
+  fi
+
+  if grep "^[^#]*[[:space:]]/boot" etc/fstab 2>&1 >/dev/null; then
+    if ! grep "[[:space:]]/boot" etc/mtab 2>&1 >/dev/null; then
+      echo "WARNING: /boot appears to be a seperate partition but is not mounted"
+      echo "         This is most likely not what you want.  Please mount your /boot"
+      echo "         partition and reinstall the kernel unless you are sure this is OK"
+    fi
+  fi
+
+  # updating module dependencies
+  echo ">>> Updating module dependencies. Please wait ..."
+  depmod ${KERNEL_VERSION}
+  echo ">>> Generating initial ramdisk, using mkinitcpio.  Please wait..."
+  mkinitcpio -p linux${KERNEL_NAME}
+}
+
+post_remove() {
+  # also remove the compat symlinks
+  rm -f boot/{initramfs-linux,kernel26}${KERNEL_NAME}.img
+  rm -f boot/{initramfs-linux,kernel26}${KERNEL_NAME}-fallback.img
+}
diff --git a/linux-pax-apparmor.preset b/linux-pax-apparmor.preset
new file mode 100644
index 0000000..ac1dd21
--- /dev/null
+++ b/linux-pax-apparmor.preset
@@ -0,0 +1,14 @@
+# mkinitcpio preset file for the 'linux-pax-apparmor' package
+
+ALL_config="/etc/mkinitcpio.conf"
+ALL_kver="/boot/vmlinuz-linux-pax-apparmor"
+
+PRESETS=('default' 'fallback')
+
+#default_config="/etc/mkinitcpio.conf"
+default_image="/boot/initramfs-linux-pax-apparmor.img"
+#default_options=""
+
+#fallback_config="/etc/mkinitcpio.conf"
+fallback_image="/boot/initramfs-linux-pax-apparmor-fallback.img" 
+fallback_options="-S autodetect"
diff --git a/linux-pax.install b/linux-pax.install
deleted file mode 100644
index 967790b..0000000
--- a/linux-pax.install
+++ /dev/null
@@ -1,77 +0,0 @@
-# arg 1:  the new package version
-# arg 2:  the old package version
-
-KERNEL_NAME=-pax
-KERNEL_VERSION=
-
-_fix_permissions () {
-	/usr/bin/linux-pax-flags -y
-
-	echo You can repeat this process after updating or installing affected
-	echo binaries by running "linux-pax-flags".
-}
-
-post_install () {
-  # updating module dependencies
-  echo ">>> Updating module dependencies. Please wait ..."
-  depmod ${KERNEL_VERSION}
-  echo ">>> Generating initial ramdisk, using mkinitcpio.  Please wait..."
-  mkinitcpio -p linux${KERNEL_NAME}
-
-  # compat symlinks for the official kernels only
-  if [ -z "${KERNEL_NAME}" -o "${KERNEL_NAME}" = "-lts" ]; then
-    loaders="$(find /boot -name syslinux.cfg -or -name extlinux.conf -or -name grub.cfg -or -name menu.lst)"
-    [ -f /etc/lilo.conf ] && loaders="$loaders /etc/lilo.conf"
-    if [ -n "${loaders}" ] && grep -q -e vmlinuz26 -e kernel26.img -e kernel26-fallback.img $loaders; then
-      # add compat symlinks for the initramfs images
-      ln -sf initramfs-linux${KERNEL_NAME}.img boot/kernel26${KERNEL_NAME}.img
-      ln -sf initramfs-linux${KERNEL_NAME}-fallback.img \
-        boot/kernel26${KERNEL_NAME}-fallback.img
-      ln -sf vmlinuz-linux${KERNEL_NAME} /boot/vmlinuz26${KERNEL_NAME}
-    fi
-  fi
-
-  _fix_permissions
-}
-
-post_upgrade() {
-  pacman -Q grub &>/dev/null
-  hasgrub=$?
-  pacman -Q grub2 &>/dev/null
-  hasgrub2=$?
-  pacman -Q lilo &>/dev/null
-  haslilo=$?
-  # reminder notices
-  if [ $haslilo -eq 0 ]; then
-    echo ">>>"
-    if [ $hasgrub -eq 0 -o $hasgrub2 -eq 0 ]; then
-      echo ">>> If you use the LILO bootloader, you should run 'lilo' before rebooting."
-    else
-      echo ">>> You appear to be using the LILO bootloader. You should run"
-      echo ">>> 'lilo' before rebooting."
-    fi
-    echo ">>>"
-  fi
-
-  if grep "^[^#]*[[:space:]]/boot" etc/fstab 2>&1 >/dev/null; then
-    if ! grep "[[:space:]]/boot" etc/mtab 2>&1 >/dev/null; then
-      echo "WARNING: /boot appears to be a seperate partition but is not mounted"
-      echo "         This is most likely not what you want.  Please mount your /boot"
-      echo "         partition and reinstall the kernel unless you are sure this is OK"
-    fi
-  fi
-
-  # updating module dependencies
-  echo ">>> Updating module dependencies. Please wait ..."
-  depmod ${KERNEL_VERSION}
-  echo ">>> Generating initial ramdisk, using mkinitcpio.  Please wait..."
-  mkinitcpio -p linux${KERNEL_NAME}
-
-  _fix_permissions
-}
-
-post_remove() {
-  # also remove the compat symlinks
-  rm -f boot/{initramfs-linux,kernel26}${KERNEL_NAME}.img
-  rm -f boot/{initramfs-linux,kernel26}${KERNEL_NAME}-fallback.img
-}
diff --git a/linux-pax.preset b/linux-pax.preset
deleted file mode 100644
index 07601cf..0000000
--- a/linux-pax.preset
+++ /dev/null
@@ -1,14 +0,0 @@
-# mkinitcpio preset file for the 'linux-pax' package
-
-ALL_config="/etc/mkinitcpio.conf"
-ALL_kver="/boot/vmlinuz-linux-pax"
-
-PRESETS=('default' 'fallback')
-
-#default_config="/etc/mkinitcpio.conf"
-default_image="/boot/initramfs-linux-pax.img"
-#default_options=""
-
-#fallback_config="/etc/mkinitcpio.conf"
-fallback_image="/boot/initramfs-linux-pax-fallback.img" 
-fallback_options="-S autodetect"
-- 
2.2.2

